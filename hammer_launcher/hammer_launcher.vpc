//-----------------------------------------------------------------------------
//	HAMMER_LAUNCHER.VPC
//
//	Project Script
//-----------------------------------------------------------------------------

$Macro SRCDIR		".."
$Macro OUTBINDIR	"$SRCDIR\..\game\bin"
$Macro OUTBINNAME	"hammer"

$Include "$SRCDIR\vpc_scripts\source_exe_base.vpc"

$Configuration
{
	$Linker [$WINDOWS]
	{
		$AdditionalDependencies				"$BASE User32.lib Wsock32.lib"
	}


	$Resources
	{
		// General
		$PreprocessorDefinitions			"$BASE;SRC_PRODUCT_INTERNAL_NAME_STRING=\$QUOTEhammer\$QUOTE;SRC_PRODUCT_ORIGINAL_NAME_STRING=\$QUOTEhammer.exe\$QUOTE"
	}

	
	$PostBuildEvent	[$WINDOWS && !$ANALYZE]
	{
		// Note that the PDB must be checked in with the name it is linked as or else the debugger
		// will not be able to find it. That's why it is checked in as default.pdb.
		// override with specific behavior
		$CommandLine				"IF NOT EXIST $OUTBINDIR MKDIR $OUTBINDIR" "\n"				\
									"COPY $(TargetPath) $OUTBINDIR\$OUTBINNAME.exe" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"COPY $(IntDir)\$OUTBINNAME.pdb $OUTBINDIR\$OUTBINNAME.pdb" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"IF EXIST $(TargetDir)$(TargetName).map COPY $(TargetDir)$(TargetName).map $OUTBINDIR\$OUTBINNAME.map" "\n" \
									"GOTO BuildEventOK" "\n" \
									":BuildEventFailed" "\n" \
									"ECHO *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
									"DEL /Q $(TargetPath)" "\n" \
									"EXIT 1" "\n" \
									":BuildEventOK" "\n"
	}
}

$Project "hammer_launcher"
{
	$Folder	"Source Files"
	{
		-$File	"$SRCDIR\public\tier0\memoverride.cpp"
		$File	"main.cpp"
	}

	$Folder	"Link Libraries"
	{
		$Lib appframework
	}
}
